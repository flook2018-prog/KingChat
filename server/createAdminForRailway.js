const { Pool } = require('pg');
const bcrypt = require('bcryptjs');

// Railway PostgreSQL connection
const pool = new Pool({
  connectionString: 'postgresql://postgres:uEDCzaMjeCGBXCItjOqqMNEYECEFgBsn@junction.proxy.rlwy.net:41738/railway',
  ssl: {
    require: true,
    rejectUnauthorized: false
  }
});

async function createAdminUser() {
  const client = await pool.connect();
  
  try {
    console.log('üîó ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ PostgreSQL ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á admins ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
    await client.query(`
      CREATE TABLE IF NOT EXISTS admins (
        id SERIAL PRIMARY KEY,
        username VARCHAR(255) UNIQUE NOT NULL,
        password VARCHAR(255) NOT NULL,
        level INTEGER DEFAULT 80,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        is_active BOOLEAN DEFAULT true
      )
    `);
    
    console.log('‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á admins ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö hash
    const password1 = await bcrypt.hash('admin123', 10);
    const password2 = await bcrypt.hash('kingchat2024', 10);
    const password3 = await bcrypt.hash('superadmin', 10);
    
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    await client.query('DELETE FROM admins');
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà
    const users = [
      { username: 'admin', password: password1, level: 100 },
      { username: 'kingchat', password: password2, level: 80 },
      { username: 'superadmin', password: password3, level: 100 }
    ];
    
    for (const user of users) {
      await client.query(
        'INSERT INTO admins (username, password, level) VALUES ($1, $2, $3)',
        [user.username, user.password, user.level]
      );
      console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á user: ${user.username} (level: ${user.level}) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const result = await client.query('SELECT id, username, level, created_at FROM admins ORDER BY id');
    
    console.log('\nüéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö:');
    console.log('====================================');
    result.rows.forEach(row => {
      console.log(`ID: ${row.id} | Username: ${row.username} | Level: ${row.level} | ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${row.created_at}`);
    });
    
    console.log('\nüîë ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:');
    console.log('====================================');
    console.log('1. Username: admin     | Password: admin123     | Level: Super Admin');
    console.log('2. Username: kingchat  | Password: kingchat2024 | Level: Admin');
    console.log('3. Username: superadmin| Password: superadmin   | Level: Super Admin');
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    client.release();
    await pool.end();
  }
}

// ‡∏£‡∏±‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
createAdminUser();